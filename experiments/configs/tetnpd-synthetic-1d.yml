generators:
  train:
    _target_: icicl.data.gp.RandomScaleGPGenerator
    dim: ${params.dim}
    kernel_type: eq
    min_log10_lengthscale: -0.602
    max_log10_lengthscale: 0.602
    noise_std: 0.2
    min_num_ctx: 32
    max_num_ctx: 64
    min_num_trg: 64
    max_num_trg: 128
    context_range: [[-2.0, 2.0]]
    target_range: [[-3.0, 3.0]]
    samples_per_epoch: 16384
    batch_size: 16
  val:
    _target_: icicl.data.gp.RandomScaleGPGenerator
    dim: ${params.dim}
    kernel_type: eq
    min_log10_lengthscale: -0.602
    max_log10_lengthscale: 0.602
    noise_std: 0.2
    min_num_ctx: 32
    max_num_ctx: 64
    min_num_trg: 64
    max_num_trg: 128
    context_range: [[-2.0, 2.0]]
    target_range: [[-3.0, 3.0]]
    samples_per_epoch: 4096
    batch_size: 16

model:
  _target_: icicl.models.tetnp.TETNPD
  encoder: ${tetnpd_encoder}
  decoder: ${tnpd_decoder}
  likelihood: ${likelihood}

tetnpd_encoder:
  _target_: icicl.models.tetnp.TETNPDEncoder
  transformer_encoder: ${tetransformer_encoder}
  y_encoder: ${y_encoder}

tetransformer_encoder:
  _target_: icicl.networks.tetransformer.TETransformerEncoder
  encoder_layer: ${mhsa_layer}
  num_layers: 3

mhsa_layer:
  _target_: icicl.networks.teattention_layers.MultiHeadSelfTEAttentionLayer
  embed_dim: ${params.embed_dim}
  num_heads: ${params.num_heads}
  head_dim: ${params.head_dim}
  kernel: ${mhsa_kernel}
  feedforward_dim: ${params.embed_dim}
  token_attention: True
  token_kernel: False

# kernel:
#   _target_: icicl.networks.kernels.RBFKernel
#   dim: ${params.dim}
#   init_lengthscale: 0.1

mhsa_kernel:
  _target_: icicl.networks.kernels.MLPKernel
  # in_dim: ${eval:'${params.dim} + ${params.embed_dim} * 2'}
  in_dim: ${params.dim}
  out_dim: ${params.num_heads}
  num_layers: 2
  width: 16

y_encoder:
  _target_: icicl.networks.mlp.MLP
  in_dim: 2
  out_dim: ${params.embed_dim}
  num_layers: 2
  width: ${params.embed_dim}

tnpd_decoder:
  _target_: icicl.models.tnp.TNPDDecoder
  z_decoder: ${z_decoder}

z_decoder:
  _target_: icicl.networks.mlp.MLP
  in_dim: ${params.embed_dim}
  out_dim: 2
  num_layers: 2
  width: ${params.embed_dim}

likelihood:
  _target_: icicl.likelihoods.gaussian.HeteroscedasticNormalLikelihood

optimiser:
  _target_: torch.optim.Adam
  _partial_: True
  lr: 3e-4

params:
  epochs: 200
  dim: 1
  embed_dim: 32
  num_heads: 4
  head_dim: 8


misc:
  project: tetnpd
  name: synthetic-1d
  resume_from_checkpoint: null
  eval: False
