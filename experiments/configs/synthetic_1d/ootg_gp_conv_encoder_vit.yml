# File inspired from 'efficient-tnpd-synthetic-1d.yml'

generators:
  train:
    _target_: icicl.data.on_off_grid.SyntheticOOTGGenerator
    off_grid_generator: ${generators.off_grid_generator_train}
    grid_range: ${params.data_range}
    points_per_unit: ${params.points_per_unit}
    ignore_on_grid: ${params.ignore_on_grid}
    samples_per_epoch: 16000
    batch_size: 16
    deterministic: ${params.deterministic}
  val:
    _target_: icicl.data.on_off_grid.SyntheticOOTGGenerator
    off_grid_generator: ${generators.off_grid_generator_val}
    grid_range: ${params.data_range}
    points_per_unit: ${params.points_per_unit}
    ignore_on_grid: ${params.ignore_on_grid}
    samples_per_epoch: 4000
    batch_size: 16
    deterministic: ${params.deterministic}
    
  off_grid_generator_train:
    _target_: icicl.data.gp.RandomScaleGPGenerator
    dim: ${params.dim}
    kernel_type: eq
    min_log10_lengthscale: -0.602
    max_log10_lengthscale: 0.602
    noise_std: 0.2
    num_tasks: ${params.gp_num_tasks}
    task_correlation: ${params.task_correlation}
    min_num_ctx: 1
    max_num_ctx: 64
    min_num_trg: 128
    max_num_trg: 128
    context_range: [[-2.0, 2.0]]
    target_range: ${params.data_range}
    samples_per_epoch: ${generators.train.samples_per_epoch}
    batch_size: ${generators.train.batch_size}
  off_grid_generator_val:
    _target_: icicl.data.gp.RandomScaleGPGenerator
    dim: ${params.dim}
    kernel_type: eq
    min_log10_lengthscale: -0.602
    max_log10_lengthscale: 0.602
    noise_std: 0.2
    num_tasks: ${params.gp_num_tasks}
    task_correlation: ${params.task_correlation}
    min_num_ctx: 1
    max_num_ctx: 64
    min_num_trg: 128
    max_num_trg: 128
    context_range: [[-2.0, 2.0]]
    target_range: ${params.data_range}
    samples_per_epoch: ${generators.val.samples_per_epoch}
    batch_size: ${generators.val.batch_size}

model:
  _target_: icicl.models.ootg_tnp.OOTG_TNPD
  encoder: ${tnpd_encoder}
  decoder: ${tnpd_decoder}
  likelihood: ${likelihood}

tnpd_encoder:
  _target_: icicl.models.ootg_tnp.OOTG_TNPDEncoder
  grid_encoder: ${grid_encoder}
  transformer_encoder: ${transformer_encoder}
  xy_encoder: ${xy_encoder}

grid_encoder:
  _target_: icicl.networks.grid_encoders.SetConvGridEncoder
  dim: ${params.dim}
  init_lengthscale: ${eval:'2 * 1 / ${params.points_per_unit}'}

transformer_encoder:
  _target_: icicl.networks.grid_transformer.GridTransformerEncoder
  patch_encoder: ${patch_encoder}
  mhca_layer: ${mhca_layer}
  num_layers: ${params.num_layers}

patch_encoder:
  _target_: icicl.networks.patch_encoders.PatchEncoder
  embed_dim: ${params.embed_dim}
  patch_size: ${params.patch_size}

mhca_layer:
  _target_: icicl.networks.attention_layers.MultiHeadCrossAttentionLayer
  embed_dim: ${params.embed_dim}
  num_heads: ${params.num_heads}
  head_dim: ${params.head_dim}
  feedforward_dim: ${params.embed_dim}
  norm_first: ${params.norm_first}

xy_encoder:
  _target_: icicl.networks.mlp.MLP
  in_dim: ${eval:'3 + ${params.dim}'} # 2 flag dimensions (preprocessing) and ydim=1
  out_dim: ${params.embed_dim}
  num_layers: 2
  width: ${params.embed_dim}

tnpd_decoder:
  _target_: icicl.models.tnp.TNPDDecoder
  z_decoder: ${z_decoder}

z_decoder:
  _target_: icicl.networks.mlp.MLP
  in_dim: ${params.embed_dim}
  out_dim: 2 # 1 for std and 1 for means
  num_layers: 2
  width: ${params.embed_dim}

likelihood:
  _target_: icicl.likelihoods.gaussian.HeteroscedasticNormalLikelihood

optimiser:
  _target_: torch.optim.AdamW
  _partial_: True
  lr: 5.0e-4

params:
  epochs: 200
  deterministic: False # makes it generate whole dataset up front and re-use over epochs
  ignore_on_grid: False

  dim: 1
  data_range: [[-4.0, 4.0]]  # range * ppu is scaled to be power of 2 anyway, so make power of 2!
  gp_num_tasks: 2
  task_correlation: 0.8
  points_per_unit: 8 # low such that num_ontg doesn't explode

  embed_dim: 128
  num_heads: 8
  head_dim: 16
  norm_first: True
  num_layers: 5

  patch_size: [16]


misc:
  project: ViT
  name: convset_encoder_NoGrid=${params.ignore_on_grid}-taskCor=${params.task_correlation}
  resume_from_checkpoint: null