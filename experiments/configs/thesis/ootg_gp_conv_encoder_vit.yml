generators:
  train:
    _target_: icicl.data.on_off_grid.SyntheticOOTGGenerator
    off_grid_generator: ${generators.off_grid_generator_train}
    grid_range: [[-3.0, 3.0]]
    points_per_unit: ${params.points_per_unit}
    samples_per_epoch: 16000
    batch_size: 16
  val:
    _target_: icicl.data.on_off_grid.SyntheticOOTGGenerator
    off_grid_generator: ${generators.off_grid_generator_val}
    grid_range: [[-3.0, 3.0]]
    points_per_unit: ${params.points_per_unit}
    samples_per_epoch: 4096
    batch_size: 16
    
  off_grid_generator_train:
    _target_: icicl.data.gp.RandomScaleGPGenerator
    dim: ${params.dim}
    kernel_type: eq
    min_log10_lengthscale: -0.602
    max_log10_lengthscale: 0.602
    noise_std: 0.2
    min_num_ctx: 1
    max_num_ctx: 64
    min_num_trg: 128
    max_num_trg: 128
    context_range: [[-2.0, 2.0]]
    target_range: [[-3.0, 3.0]]
    samples_per_epoch: ${generators.train.samples_per_epoch}
    batch_size: ${generators.train.batch_size}
  off_grid_generator_val:
    _target_: icicl.data.gp.RandomScaleGPGenerator
    dim: ${params.dim}
    kernel_type: eq
    min_log10_lengthscale: -0.602
    max_log10_lengthscale: 0.602
    noise_std: 0.2
    min_num_ctx: 1
    max_num_ctx: 64
    min_num_trg: 128
    max_num_trg: 128
    context_range: [[-2.0, 2.0]]
    target_range: [[-3.0, 3.0]]
    samples_per_epoch: ${generators.val.samples_per_epoch}
    batch_size: ${generators.val.batch_size}

model:
  _target_: icicl.models.ootg_tnp.OOTG_TNPD
  encoder: ${tnpd_encoder}
  decoder: ${tnpd_decoder}
  likelihood: ${likelihood}

tnpd_encoder:
  _target_: icicl.models.ootg_tnp.OOTG_ViTEncoder
  patch_size: ${params.patch_size}
  in_dim_x: ${params.dim}
  out_dim_x: ${params.embed_dim}
  out_dim_y: ${params.embed_dim}
  grid_encoder: ${tnpd_grid_encoder}
  transformer_encoder: ${transformer_encoder}
  xy_encoder: ${xy_encoder}
  ar_mode: False

tnpd_grid_encoder:
  _target_: icicl.models.ootg_tnp.OOTGSetConvEncoder
  dim: ${params.dim}
  init_lengthscale:  ${eval:'2 * 1 / ${params.points_per_unit}'}

transformer_encoder:
  _target_: icicl.networks.transformer.TransformerEncoder
  mhsa_layer: ${mhsa_layer}
  num_layers: 5

mhsa_layer:
  _target_: icicl.networks.attention_layers.MultiHeadSelfAttentionLayer
  embed_dim: ${params.embed_dim}
  num_heads: ${params.num_heads}
  head_dim: ${params.head_dim}
  feedforward_dim: ${params.embed_dim}

xy_encoder:
  _target_: icicl.networks.mlp.MLP
  in_dim: ${eval:'2 + ${params.embed_dim}'} # Guess
  out_dim: ${params.embed_dim}
  num_layers: 2
  width: 32

tnpd_decoder:
  _target_: icicl.models.tnp.TNPDDecoder
  z_decoder: ${z_decoder}

z_decoder:
  _target_: icicl.networks.mlp.MLP
  in_dim: ${params.embed_dim}
  out_dim: 2 # not sure, left unmodified, might just be 1 for std and 1 for means?
  num_layers: 2
  width: 32

likelihood:
  _target_: icicl.likelihoods.gaussian.HeteroscedasticNormalLikelihood

optimiser:
  _target_: torch.optim.Adam
  _partial_: True
  lr: 0.0001 # 3e-4 is weirdly enough treated as string?

params:
  dim: 1
  points_per_unit: 64
  patch_size: 16
  epochs: 50
  embed_dim: 32
  num_heads: 4
  head_dim: 8


misc:
  project: tnp-on-off-grid
  name: conv_set_encoder_vit
  resume_from_checkpoint: null