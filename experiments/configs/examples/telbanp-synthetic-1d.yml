generators:
  train:
    _target_: icicl.data.gp.RandomScaleGPGenerator
    dim: ${params.dim}
    kernel_type: eq
    min_log10_lengthscale: -0.602
    max_log10_lengthscale: 0.602
    noise_std: 0.2
    min_num_ctx: 1
    max_num_ctx: 64
    min_num_trg: 128
    max_num_trg: 128
    context_range: [[-2.0, 2.0]]
    target_range: [[-3.0, 3.0]]
    samples_per_epoch: 16384
    batch_size: 16
  val:
    _target_: icicl.data.gp.RandomScaleGPGenerator
    dim: ${params.dim}
    kernel_type: eq
    min_log10_lengthscale: -0.602
    max_log10_lengthscale: 0.602
    noise_std: 0.2
    min_num_ctx: 1
    max_num_ctx: 64
    min_num_trg: 128
    max_num_trg: 128
    context_range: [[-2.0, 2.0]]
    target_range: [[-3.0, 3.0]]
    samples_per_epoch: 4096
    batch_size: 16

model:
  _target_: icicl.models.telbanp.TELBANP
  encoder: ${telbanp_encoder}
  decoder: ${lbanp_decoder}
  likelihood: ${likelihood}

telbanp_encoder:
  _target_: icicl.models.telbanp.TELBANPEncoder
  nested_perceiver_encoder: ${nested_teperceiver_encoder}
  y_encoder: ${y_encoder}

nested_teperceiver_encoder:
  _target_: icicl.networks.tetransformer.NestedTEPerceiverEncoder
  dim: ${params.dim}
  num_latents: ${params.num_latents}
  mhsa_layer: ${mhsa_layer}
  mhca_ctoq_layer: ${mhca_ctoq_layer}
  mhca_qtot_layer: ${mhca_qtot_layer}
  num_layers: ${params.num_layers}
  pseudo_token_initialiser: ${pseudo_token_initialiser}

mhsa_layer:
  _target_: icicl.networks.teattention_layers.MultiHeadSelfTEAttentionLayer
  embed_dim: ${params.embed_dim}
  num_heads: ${params.num_heads}
  head_dim: ${params.head_dim}
  kernel: ${mhsa_kernel}
  feedforward_dim: ${params.embed_dim}
  norm_first: ${params.norm_first}
  post_kernel: True
  phi_t: ${mhsa_phi_t}
  qk_dim: ${params.qk_dim}

mhsa_kernel:
  _target_: icicl.networks.kernels.MLPKernel
  in_dim: ${eval:'${params.qk_dim} + ${params.dim}'}
  out_dim: ${params.num_heads}
  num_layers: 2
  width: ${params.embed_dim}

mhsa_phi_t:
  _target_: icicl.networks.mlp.MLP
  in_dim: ${params.num_heads}
  out_dim: 1
  num_layers: 2
  width: ${params.embed_dim}

mhca_ctoq_layer:
  _target_: icicl.networks.teattention_layers.MultiHeadCrossTEAttentionLayer
  embed_dim: ${params.embed_dim}
  num_heads: ${params.num_heads}
  head_dim: ${params.head_dim}
  kernel: ${mhca_ctoq_kernel}
  feedforward_dim: ${params.embed_dim}
  norm_first: ${params.norm_first}
  post_kernel: True
  phi_t: ${mhca_ctoq_phi_t}
  qk_dim: ${params.qk_dim}

mhca_ctoq_kernel:
  _target_: icicl.networks.kernels.MLPKernel
  in_dim: ${eval:'${params.qk_dim} + ${params.dim}'}
  out_dim: ${params.num_heads}
  num_layers: 2
  width: ${params.embed_dim}

mhca_ctoq_phi_t:
  _target_: icicl.networks.mlp.MLP
  in_dim: ${params.num_heads}
  out_dim: 1
  num_layers: 2
  width: ${params.embed_dim}

mhca_qtot_layer:
  _target_: icicl.networks.teattention_layers.MultiHeadCrossTEAttentionLayer
  embed_dim: ${params.embed_dim}
  num_heads: ${params.num_heads}
  head_dim: ${params.head_dim}
  kernel: ${mhca_qtot_kernel}
  feedforward_dim: ${params.embed_dim}
  norm_first: ${params.norm_first}
  post_kernel: True
  phi_t: ${mhca_qtot_phi_t}
  qk_dim: ${params.qk_dim}

mhca_qtot_kernel:
  _target_: icicl.networks.kernels.MLPKernel
  in_dim: ${eval:'${params.qk_dim} + ${params.dim}'}
  out_dim: ${params.num_heads}
  num_layers: 2
  width: ${params.embed_dim}

mhca_qtot_phi_t:
  _target_: icicl.networks.mlp.MLP
  in_dim: ${params.num_heads}
  out_dim: 1
  num_layers: 2
  width: ${params.embed_dim}

pseudo_token_initialiser:
  _target_: icicl.networks.te_pseudo_initialisers.PseudoTokenInitialiser
  embed_dim: ${params.embed_dim}
  num_heads: ${params.num_heads}
  head_dim: ${params.head_dim}

y_encoder:
  _target_: icicl.networks.mlp.MLP
  in_dim: 2
  out_dim: ${params.embed_dim}
  num_layers: 2
  width: ${params.embed_dim}

lbanp_decoder:
  _target_: icicl.models.lbanp.NestedLBANPDecoder
  z_decoder: ${z_decoder}

z_decoder:
  _target_: icicl.networks.mlp.MLP
  in_dim: ${params.embed_dim}
  out_dim: 2
  num_layers: 2
  width: ${params.embed_dim}

likelihood:
  _target_: icicl.likelihoods.gaussian.HeteroscedasticNormalLikelihood

optimiser:
  _target_: torch.optim.Adam
  _partial_: True
  lr: 5e-4

params:
  epochs: 200
  dim: 1
  embed_dim: 32
  num_heads: 4
  head_dim: 8
  num_latents: 32
  num_layers: 5
  norm_first: True
  qk_dim: ${params.num_heads}



misc:
  project: telbanp
  name: synthetic-1d-L${params.num_layers}-H${params.num_heads}-D${params.embed_dim}-M${params.num_latents}
  resume_from_checkpoint: null
  eval: False
  logging: True
  seed: 0
